image: docker:20.10

services:
  - docker:20.10-dind

variables:
  ECR_REGISTRY: "891612544658.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: "${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
  SERVICES: "backend_rds backend_redis"
  CORS_ALLOWED_ORIGINS: "http://dwl2e3x2kooo5.cloudfront.net"

stages:
  - build
  - deploy

build:
  stage: build
  image: docker:20.10
  before_script:
    - apk add --no-cache aws-cli
  script:
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
    - for SERVICE in $SERVICES; do
        echo "Building image for $SERVICE...";
        cd $SERVICE &&
        docker build -t $ECR_REGISTRY/$SERVICE:$IMAGE_TAG . &&
        docker push $ECR_REGISTRY/$SERVICE:$IMAGE_TAG &&
        cd ..;
      done

deploy: 
  stage: deploy 
  image: alpine:latest 
  before_script: 
    - apk add --no-cache openssh 
    - echo "$SSH_PRIVATE_KEY" > private_key.pem 
    - chmod 600 private_key.pem 
  script: 
    - | 
      ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$EC2_HOST << EOF
        aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY 
        cd /home/ubuntu/project1
        export SERVICES="${SERVICES}" 
        export IMAGE_TAG="${IMAGE_TAG}"
        for SERVICE in \$SERVICES; do 
          echo \"Updating service: \$SERVICE\"; 
          IMAGE_NAME="891612544658.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/\${SERVICE}:\${IMAGE_TAG}"
          yq eval -i ".services.\\"\${SERVICE}\\".image = \"\${IMAGE_NAME}\"" docker-compose.yml
        done
        docker-compose down
        docker-compose up -d
      EOF

version: '3.8'

services:
  backend_rds:
    image: postgres:13
    command: ["sh", "-c", "echo $POSTGRES_PASSWORD && sleep 3600"]
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=5432
      - CORS_ALLOWED_ORIGINS=http://dwl2e3x2kooo5.cloudfront.net
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}
    ports:
      - "8000:8000"
    networks:
      - backend_network
    depends_on:
      - postgres
      - redis

  backend_redis:
    image: redis:alpine
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB}
      - CORS_ALLOWED_ORIGINS=http://dwl2e3x2kooo5.cloudfront.net
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "8001:8001"
    networks:
      - backend_network
    depends_on:
      - redis

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend_network

  redis:
    image: redis:alpine
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    networks:
      - backend_network

# Def³ne custom network for communication between services
networks:
  backend_network:
    driver: bridge

# Persist PostgreSQL data across container restarts
volumes:
  pgdata:

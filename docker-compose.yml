version: '3.8'

services:
  backend_rds:
    build:
      context: ./backend_rds
      dockerfile: Dockerfile
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - CORS_ALLOWED_ORIGINS=http://localhost:8080 
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      - postgres
    ports:
      - "8000:8000"

  backend_redis:
    build:
      context: ./backend_redis
      dockerfile: Dockerfile
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}  
      - CORS_ALLOWED_ORIGINS=http://localhost:8080  
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    ports:
      - "8001:8001"

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD} 
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"

  frontend:
    image: nginx:alpine
    volumes:
      - ./nginx/project_nginx.conf:/etc/nginx/conf.d/default.conf
    build:
      context: ./frontend  
      dockerfile: Dockerfile
    ports:
      - "8080:80"

  nginx_proxy:
    image: nginx:latest
    volumes:
      - ./nginx/project_nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - backend_rds
      - backend_redis
      - frontend

volumes:
  pgdata:
